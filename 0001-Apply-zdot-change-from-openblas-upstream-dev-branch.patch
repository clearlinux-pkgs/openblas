From 846798f7c93fde13d59764cc080104bbce408d0d Mon Sep 17 00:00:00 2001
From: Shan Kang <shan.kang@intel.com>
Date: Fri, 1 Nov 2019 11:10:54 +0800
Subject: [PATCH] Apply zdot change from openblas upstream dev branch

Signed-off-by: Shan Kang <shan.kang@intel.com>
---
 kernel/x86_64/zdot.c | 102 +++++++++++++++++++++++++++++++++++++------
 1 file changed, 88 insertions(+), 14 deletions(-)

diff --git a/kernel/x86_64/zdot.c b/kernel/x86_64/zdot.c
index ef12569..01169e8 100644
--- a/kernel/x86_64/zdot.c
+++ b/kernel/x86_64/zdot.c
@@ -86,18 +86,26 @@ static void zdot_kernel_8(BLASLONG n, FLOAT *x, FLOAT *y, FLOAT *d)
 
 #endif
 
-OPENBLAS_COMPLEX_FLOAT CNAME(BLASLONG n, FLOAT *x, BLASLONG inc_x, FLOAT *y, BLASLONG inc_y)
+
+#if defined(SMP)
+extern int blas_level1_thread_with_return_value(int mode, BLASLONG m, BLASLONG n,
+        BLASLONG k, void *alpha, void *a, BLASLONG lda, void *b, BLASLONG ldb,
+        void *c, BLASLONG ldc, int (*function)(), int nthreads);
+#endif
+                
+                
+
+static void zdot_compute (BLASLONG n, FLOAT *x, BLASLONG inc_x, FLOAT *y, BLASLONG inc_y,OPENBLAS_COMPLEX_FLOAT *result)
 {
 	BLASLONG i;
 	BLASLONG ix,iy;
 	FLOAT  dot[4] = { 0.0, 0.0, 0.0 , 0.0 } ; 
-
+	
 	if ( n <= 0 ) 
 	{
-//	        CREAL(result) = 0.0 ;
-//        	CIMAG(result) = 0.0 ;
-		OPENBLAS_COMPLEX_FLOAT result=OPENBLAS_MAKE_COMPLEX_FLOAT(0.0,0.0);
-		return(result);
+		OPENBLAS_COMPLEX_FLOAT res=OPENBLAS_MAKE_COMPLEX_FLOAT(0.0,0.0);
+		*result=res;
+		return;
 
 	}
 
@@ -150,18 +158,84 @@ OPENBLAS_COMPLEX_FLOAT CNAME(BLASLONG n, FLOAT *x, BLASLONG inc_x, FLOAT *y, BLA
 	}
 
 #if !defined(CONJ)
-	OPENBLAS_COMPLEX_FLOAT result=OPENBLAS_MAKE_COMPLEX_FLOAT(dot[0]-dot[1],dot[2]+dot[3]);
-//	CREAL(result) = dot[0] - dot[1];
-//	CIMAG(result) = dot[2] + dot[3];
+	OPENBLAS_COMPLEX_FLOAT res=OPENBLAS_MAKE_COMPLEX_FLOAT(dot[0]-dot[1],dot[2]+dot[3]);
 #else
-	OPENBLAS_COMPLEX_FLOAT result=OPENBLAS_MAKE_COMPLEX_FLOAT(dot[0]+dot[1],dot[2]-dot[3]);
-//	CREAL(result) = dot[0] + dot[1];
-//	CIMAG(result) = dot[2] - dot[3];
+	OPENBLAS_COMPLEX_FLOAT res=OPENBLAS_MAKE_COMPLEX_FLOAT(dot[0]+dot[1],dot[2]-dot[3]);
+#endif
+        *result=res;
+	return;
+}
 
+#if defined(SMP)
+static int zdot_thread_function(BLASLONG n, BLASLONG dummy0,
+BLASLONG dummy1, FLOAT dummy2, FLOAT *x, BLASLONG inc_x, FLOAT *y,
+BLASLONG inc_y, FLOAT *result, BLASLONG dummy3)
+{
+        zdot_compute(n, x, inc_x, y, inc_y, (void *)result);
+        return 0;
+}
+#endif
+
+OPENBLAS_COMPLEX_FLOAT CNAME(BLASLONG n, FLOAT *x, BLASLONG inc_x, FLOAT *y, BLASLONG inc_y)
+{
+#if defined(SMP)
+	int nthreads;
+	FLOAT dummy_alpha;
+#if defined(C_PGI) || defined(C_SUN)	
+	FLOAT zdotr=0., zdoti=0.;
+#endif	
 #endif
+	
+	OPENBLAS_COMPLEX_FLOAT zdot;
+#if defined(C_PGI) || defined(C_SUN)	
+        zdot=OPENBLAS_MAKE_COMPLEX_FLOAT(0.0,0.0);
+#else
+	CREAL(zdot) = 0.0;
+	CIMAG(zdot) = 0.0;
+#endif
+	
+#if defined(SMP)
+	if (inc_x == 0 || inc_y == 0 || n <= 10000)
+		nthreads = 1;
+	else
+		nthreads = num_cpu_avail(1);
 
-	return(result);
+	if (nthreads == 1) {
+		zdot_compute(n, x, inc_x, y, inc_y, &zdot);
+	} else {
+		int mode, i;
+		char result[MAX_CPU_NUMBER * sizeof(double) * 2];
+		OPENBLAS_COMPLEX_FLOAT *ptr;
 
-}
+#if !defined(DOUBLE)
+		mode = BLAS_SINGLE  | BLAS_COMPLEX;
+#else
+		mode = BLAS_DOUBLE  | BLAS_COMPLEX;
+#endif
 
+		blas_level1_thread_with_return_value(mode, n, 0, 0, &dummy_alpha,
+				   x, inc_x, y, inc_y, result, 0,
+				   ( void *)zdot_thread_function, nthreads);
+
+		ptr = (OPENBLAS_COMPLEX_FLOAT *)result;
+		for (i = 0; i < nthreads; i++) {
+#if defined(C_PGI) || defined(C_SUN)			
+			zdotr += CREAL(*ptr);
+			zdoti += CIMAG(*ptr);
+#else			
+			CREAL(zdot) = CREAL(zdot) + CREAL(*ptr);
+			CIMAG(zdot) = CIMAG(zdot) + CIMAG(*ptr);
+#endif
+			ptr = (void *)(((char *)ptr) + sizeof(double) * 2);
+		}
+#if defined(C_PGI) || defined(C_SUN)		
+	zdot = OPENBLAS_MAKE_COMPLEX_FLOAT(zdotr,zdoti);
+#endif
+	}
+#else
+	zdot_compute(n, x, inc_x, y, inc_y, &zdot);
+#endif
+	
+	return zdot;
+}
 
-- 
2.22.0

